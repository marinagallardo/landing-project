@mixin flex-container($display:flex, $direction:row, $wrap:nowrap, $justify:space-between, $align: center) {
  display: $display;
  flex-flow: $direction $wrap;
  justify-content: $justify;
  align-items: $align;
}

@mixin button($bg, $bg-hover, $text-color: $white) {
  span {
    background-color: $bg;
    color: $text-color;

    &:hover {
      background-color: $bg-hover;
    }
  }
}

@mixin transition($property:color, $speed:300ms, $ease:ease) {
  transition: $property $speed $ease;
}

@mixin vertical-gradient($from, $to, $stop: 100%) {
  background: linear-gradient(to bottom, $from 0%, $to $stop);
}

@mixin size($property: font-size, $size: null) {
  $property: $size; //Fallback in px
  $property: calculateRem($size);
}

@mixin transform($transforms) {
  transform: $transforms;
}

@mixin client-logo($url: null, $size: null) {
  background-image: url($url);
  background-size: $size;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  text-indent: rem(-9999px);
}

@mixin effra-font {
  font-family: 'Effra';
  letter-spacing: rem(2px);
}

@mixin closeButton ($size, $thickness, $color, $colorHover) {
  & {
    display: inline-block;
    width: $size;
    height: $size;
  }

  &:before, &:after {
    content: '';
    display: block;
    width: 140%;
    height: $thickness;
    background: $color;
  }

  &:before {
    @include transform(rotate(45deg));

    transform-origin: 0 0;
    margin-top: -$thickness/4;
    margin-left: $thickness/2;
  }

  &:after {
    @include transform(rotate(-45deg));
    transform-origin: 100% 0;
    margin-left: -41%;
    margin-top: -$thickness;
  }

  &:hover {
    cursor: pointer;

    &:before, &:after {
      background: $white;
    }
  }
}
